<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<view-controller path="/" view-name="/index"/>
	<!-- tiles 환경설정  -->
	<beans:bean id="tilesConfigurer"
				class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- tiles는 view이름을 가져와서 작용하는것이기 때문에 viewResovler가 있는 bean에서 등록하여 적용한다. -->
	<beans:bean id="viewClass" class="java.lang.String">
		<beans:constructor-arg value="org.springframework.web.servlet.view.tiles3.TilesView	" />
	</beans:bean>			
	<!-- order를 주어서 우선순위를 정해준다/ DispatchServlet와 tiles를연계하기 위해 urlBadsedViewResolver가 필요-->
	<beans:bean id="tilesViewResolver"
				class="org.springframework.web.servlet.view.UrlBasedViewResolver"
				p:viewClass-ref="viewClass"
				p:order="1"
				/>
	<!-- multipartResolver -->
	<beans:bean p:defaultEncoding="utf-8" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>
	
	<!-- spring-donwload bean -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <beans:property name="order" value="0" />
	</beans:bean>
	<beans:bean id="downloadView" class="com.dlms.utils.DownloadView" />
		
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
				p:order="2">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.dlms" />
	
	
	
</beans:beans>
