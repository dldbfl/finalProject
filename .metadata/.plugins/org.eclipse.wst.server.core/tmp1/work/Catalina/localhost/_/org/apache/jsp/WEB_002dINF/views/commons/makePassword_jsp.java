/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-07-09 03:27:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.commons;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class makePassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write(" <style>\r\n");
      out.write("\t.wrap{\r\n");
      out.write("\t\tpadding: 303px 0px 0px;\r\n");
      out.write("\t    font-size: 32px;\r\n");
      out.write("\t    width: 70%;\r\n");
      out.write("\t    font-family: 'Karla';\r\n");
      out.write("\t    margin: 0 auto;\r\n");
      out.write("\t    text-align: left;\r\n");
      out.write("\t}\r\n");
      out.write("\t .breadcrumb {\r\n");
      out.write("\t    padding: 0px;\r\n");
      out.write("\t\tbackground: #D4D4D4;\r\n");
      out.write("\t\tlist-style: none; \r\n");
      out.write("\t\toverflow: hidden;\r\n");
      out.write("\t\tfloat: right;\r\n");
      out.write("\t\twidth: 47%;\r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb>li+li:before {\r\n");
      out.write("\t\tpadding: 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li { \r\n");
      out.write("\t\tfloat: left; \r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li.active a {\r\n");
      out.write("\t\tbackground: brown;                  \r\n");
      out.write("\t\tbackground: #ffc107 ; \r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li.completed a {\r\n");
      out.write("\t\tbackground: brown;                   \r\n");
      out.write("\t\tbackground: hsla(153, 57%, 51%, 1); \r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li.active a:after {\r\n");
      out.write("\t\tborder-left: 30px solid #ffc107 ;\r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li.completed a:after {\r\n");
      out.write("\t\tborder-left: 30px solid hsla(153, 57%, 51%, 1);\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\t.breadcrumb li a {\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\ttext-decoration: none; \r\n");
      out.write("\t\tpadding: 10px 0 10px 45px;\r\n");
      out.write("\t\tposition: relative; \r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t}\r\n");
      out.write("\t.breadcrumb li a:after { \r\n");
      out.write("\t\tcontent: \" \"; \r\n");
      out.write("\t\tdisplay: block; \r\n");
      out.write("\t\twidth: 0; \r\n");
      out.write("\t\theight: 0;\r\n");
      out.write("\t\tborder-top: 50px solid transparent;          \r\n");
      out.write("\t\tborder-bottom: 50px solid transparent;\r\n");
      out.write("\t\tborder-left: 30px solid hsla(0, 0%, 83%, 1);\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\ttop: 50%;\r\n");
      out.write("\t\tmargin-top: -50px; \r\n");
      out.write("\t\tleft: 100%;\r\n");
      out.write("\t\tz-index: 2; \r\n");
      out.write("\t}\t\r\n");
      out.write("\t.breadcrumb li a:before { \r\n");
      out.write("\t\tcontent: \" \"; \r\n");
      out.write("\t\tdisplay: block; \r\n");
      out.write("\t\twidth: 0; \r\n");
      out.write("\t\theight: 0;\r\n");
      out.write("\t\tborder-top: 50px solid transparent;          \r\n");
      out.write("\t\tborder-bottom: 50px solid transparent;\r\n");
      out.write("\t\tborder-left: 30px solid white;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\ttop: 50%;\r\n");
      out.write("\t\tmargin-top: -50px; \r\n");
      out.write("\t\tmargin-left: 1px;\r\n");
      out.write("\t\tleft: 100%;\r\n");
      out.write("\t\tz-index: 1; \r\n");
      out.write("\t}\t\r\n");
      out.write("\t.breadcrumb li:first-child a {\r\n");
      out.write("\t\tpadding-left: 15px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.wrap .row{\r\n");
      out.write("\t\tborder-bottom: 1px solid black;\r\n");
      out.write("\t\tmargin-bottom: 10%; \r\n");
      out.write("\t}\r\n");
      out.write("\tspan.glyphicon{\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t}\r\n");
      out.write("\tul{\r\n");
      out.write("\t   list-style:none;\r\n");
      out.write("\t   font-size: 15px;\r\n");
      out.write("   }\r\n");
      out.write("   li>button{\r\n");
      out.write("\t\twidth: 50%;\r\n");
      out.write("   }\r\n");
      out.write("   .tit{\r\n");
      out.write("\t\tfont-size: 32px;\r\n");
      out.write("   }\r\n");
      out.write("   div label{\r\n");
      out.write("\t\tfont-size: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.checkPoint{\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t.h3Resurlt{\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tmargin-top: 400px;\r\n");
      out.write("\t}\r\n");
      out.write(" </style>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/resources/css/loading/loading.css\" />\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("\t<span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\">비밀번호 변경하기</span>\r\n");
      out.write("<br>\r\n");
      out.write("\t<form name=\"updatePwd\" class=\"updatePwd\">\r\n");
      out.write("\t\t<fieldset >\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"member_id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" />\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t<h3>새로운 비밀번호</h3>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"member_pwd\" id=\"member_pwd\" class=\"inp\" placeholder=\"비밀번호 입력\" maxlength=\"50\"/>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t<h3>새로운 비밀번호 확인</h3>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"member_pwdCheck\" id=\"member_pwdCheck\" class=\"inp\" placeholder=\"비밀번호 확인 입력\" maxlength=\"80\"/>\r\n");
      out.write("\t\t\t\t\t<span class=\"checkPoint\">비밀번호가 일치하지 않습니다.</span>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t<button  type=\"button\" class=\" btn btn-danger\" name=\"checkBtn\" onclick=\"SubmitChangPwd();\"><span>확인</span></button>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</fieldset>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction SubmitChangPwd(){\r\n");
      out.write("\t\tvar form = $(\"form[name='updatePwd']\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tform.attr(\"action\",\"");
      out.print(request.getContextPath());
      out.write("/commons/insertPwd\");\r\n");
      out.write("\t\tform.attr(\"method\",\"post\");\r\n");
      out.write("\r\n");
      out.write("\t\tvar pwd=$(\"input[name='member_pwd']\").val()\r\n");
      out.write("\t\tvar pwdCheck=$(\"input[name='member_pwdCheck']\").val()\r\n");
      out.write("\t\tif(pwd==\"\"){\r\n");
      out.write("\t\t\t$(\"input[name='member_pwd']\").css(\"border\",\"4px solid pink\");\r\n");
      out.write("\t\t\t$(\"input[name='member_pwd']\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(pwdCheck==\"\"){\r\n");
      out.write("\t\t\t$(\"input[name='member_pwdCheck']\").css(\"border\",\"4px solid red\");\r\n");
      out.write("\t\t\t$(\"input[name='member_pwdCheck']\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(pwd != pwdCheck){\r\n");
      out.write("\t\t\t$(\"input[name='member_pwdCheck']\").focus();\r\n");
      out.write("\t\t\t$(\"input[name='member_pwdCheck']\").val(\"\");\r\n");
      out.write("\t\t\t$(\".checkPoint\").show();\r\n");
      out.write("\t\t\t$(\".checkPoint\").css(\"color\",\"red\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t$(\".wrap\").hide();\r\n");
      out.write("\t\t\t$(\".h3Resurlt\").show();\r\n");
      out.write("\t\t\t$(\".wrap\").after(\"<h3 class='h3Resurlt'>비밀번호가 변경되었습니다.</h3>\");\r\n");
      out.write("            //카운트 시작 숫자\r\n");
      out.write("            var count = 3;\r\n");
      out.write("            //카운트다운함수\r\n");
      out.write("            var countdown = setInterval(function(){\r\n");
      out.write("            //해당 태그에 아래 내용을 출력\r\n");
      out.write("            $(\".h3Resurlt\").html(\"<div class='logoImge'></div><b><font color='blue' size='66pt'>\"\r\n");
      out.write("            + count + \"</font><b><p>초 후  로그인화면으로 이동 합니다.</p>\");\r\n");
      out.write("                //0초면 초기화 후 이동되는 사이트\r\n");
      out.write("                if (count == 0) {\r\n");
      out.write("                    clearInterval(countdown);\r\n");
      out.write("            \t\tform.submit();\r\n");
      out.write("                    }\r\n");
      out.write("                count--;//카운트 감소\r\n");
      out.write("            }, 1000);\r\n");
      out.write("\t\t},500)\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
