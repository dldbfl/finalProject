/* 수강생자격증 */
CREATE TABLE CERTIFICATE (
	CERTIFICATE_NO NUMBER NOT NULL, /* 자격증번호 */
	STUDENT_ID VARCHAR2(100), /* 수강생아이디 */
	CERTIFICATE_KINDS VARCHAR2(100), /* 자격증종류 */
	CERTIFICATE_RANK VARCHAR2(100), /* 자격증등급 */
	CERTIFICATE_DATE DATE, /* 취득일자 */
	CERTIFICATE_AGENCY VARCHAR2(100) /* 발급한기관 */
);

COMMENT ON TABLE CERTIFICATE IS '수강생자격증';

COMMENT ON COLUMN CERTIFICATE.CERTIFICATE_NO IS '자격증번호';

COMMENT ON COLUMN CERTIFICATE.STUDENT_ID IS '수강생아이디';

COMMENT ON COLUMN CERTIFICATE.CERTIFICATE_KINDS IS '자격증종류';

COMMENT ON COLUMN CERTIFICATE.CERTIFICATE_RANK IS '자격증등급';

COMMENT ON COLUMN CERTIFICATE.CERTIFICATE_DATE IS '취득일자';

COMMENT ON COLUMN CERTIFICATE.CERTIFICATE_AGENCY IS '발급한기관';

CREATE UNIQUE INDEX PK_CERTIFICATE
	ON CERTIFICATE (
		CERTIFICATE_NO ASC
	);

ALTER TABLE CERTIFICATE
	ADD
		CONSTRAINT PK_CERTIFICATE
		PRIMARY KEY (
			CERTIFICATE_NO
		);

/* CHEER */
CREATE TABLE CHEER (
	CHEER_NO NUMBER NOT NULL, /* 응원 번호
 */
	CHEER_WRITER VARCHAR2(150), /* 작성자
 */
	CHEER_CONTENT VARCHAR2(150), /* 한줄내용(50자 제한)
 */
	CHEER_REGDATE DATE /* 등록일자 */
);

COMMENT ON TABLE CHEER IS 'CHEER';

COMMENT ON COLUMN CHEER.CHEER_NO IS '응원 번호
';

COMMENT ON COLUMN CHEER.CHEER_WRITER IS '작성자
';

COMMENT ON COLUMN CHEER.CHEER_CONTENT IS '한줄내용(50자 제한)
';

COMMENT ON COLUMN CHEER.CHEER_REGDATE IS '등록일자';

CREATE UNIQUE INDEX CHEER_PK
	ON CHEER (
		CHEER_NO ASC
	);

ALTER TABLE CHEER
	ADD
		CONSTRAINT CHEER_PK
		PRIMARY KEY (
			CHEER_NO
		);

/* 상담문의 */
CREATE TABLE CONSULT (
	CONSULT_NO NUMBER NOT NULL, /* 게시글번호 */
	CONSULT_TITLE VARCHAR2(250), /* 제목 */
	CONSULT_WRITER VARCHAR2(100), /* 수강생 */
	CONSULT_CONTENT VARCHAR2(3000), /* 상담내용 */
	CONSULT_REGDATE DATE, /* 등록일자 */
	CONSULT_ANSWER VARCHAR2(100), /* 관리자 */
	CONSULT_ANSWER_DATE DATE, /* 답변날자 */
	CONSULT_VIEWCNT NUMBER, /* 조회수 */
	CONSULT_ANSWER_CONTENT VARCHAR2(3000), /* 답변내용 */
	CONSULT_TYPE VARCHAR2(100), /* 비밀글 일반글
 */
	CONSULT_STATUS NUMBER, /* 0: 미답 1: 답변 */
	CONSULT_PWD VARCHAR2(100) /* 비밀글번호 */
);

COMMENT ON TABLE CONSULT IS '상담문의';

COMMENT ON COLUMN CONSULT.CONSULT_NO IS '게시글번호';

COMMENT ON COLUMN CONSULT.CONSULT_TITLE IS '제목';

COMMENT ON COLUMN CONSULT.CONSULT_WRITER IS '수강생';

COMMENT ON COLUMN CONSULT.CONSULT_CONTENT IS '상담내용';

COMMENT ON COLUMN CONSULT.CONSULT_REGDATE IS '등록일자';

COMMENT ON COLUMN CONSULT.CONSULT_ANSWER IS '관리자';

COMMENT ON COLUMN CONSULT.CONSULT_ANSWER_DATE IS '답변날자';

COMMENT ON COLUMN CONSULT.CONSULT_VIEWCNT IS '조회수';

COMMENT ON COLUMN CONSULT.CONSULT_ANSWER_CONTENT IS '답변내용';

COMMENT ON COLUMN CONSULT.CONSULT_TYPE IS '비밀글 일반글
';

COMMENT ON COLUMN CONSULT.CONSULT_STATUS IS '0: 미답 1: 답변';

COMMENT ON COLUMN CONSULT.CONSULT_PWD IS '비밀글번호';

CREATE UNIQUE INDEX PK_CONSULT
	ON CONSULT (
		CONSULT_NO ASC
	);

ALTER TABLE CONSULT
	ADD
		CONSTRAINT PK_CONSULT
		PRIMARY KEY (
			CONSULT_NO
		);

/* DOCUMENT */
CREATE TABLE DOCUMENT (
	DOCUMENT_NO NUMBER NOT NULL, /* 문서번호
 */
	DOCUMENT_WRITER VARCHAR2(150), /* 교수아이디
 */
	DOCUMENT_TITLE VARCHAR2(150), /* 문서제목
 */
	DOCUMENT_CONTENT VARCHAR2(3000), /* 문서내용 */
	DOCUMENT_REGDATE DATE /* 문서등록일자 */
);

COMMENT ON TABLE DOCUMENT IS 'DOCUMENT';

COMMENT ON COLUMN DOCUMENT.DOCUMENT_NO IS '문서번호
';

COMMENT ON COLUMN DOCUMENT.DOCUMENT_WRITER IS '교수아이디
';

COMMENT ON COLUMN DOCUMENT.DOCUMENT_TITLE IS '문서제목
';

COMMENT ON COLUMN DOCUMENT.DOCUMENT_CONTENT IS '문서내용';

COMMENT ON COLUMN DOCUMENT.DOCUMENT_REGDATE IS '문서등록일자';

CREATE UNIQUE INDEX DOCUMENT_PK
	ON DOCUMENT (
		DOCUMENT_NO ASC
	);

ALTER TABLE DOCUMENT
	ADD
		CONSTRAINT DOCUMENT_PK
		PRIMARY KEY (
			DOCUMENT_NO
		);

/* DOCUMENT_DATA */
CREATE TABLE DOCUMENT_DATA (
	DOCUMENT_DATA_NO NUMBER NOT NULL, /* 문서자료번호
 */
	DOCUMENT_NO NUMBER, /* 문서번호 */
	DOCUMENT_DATA_FILENAME VARCHAR2(150), /* 문서자료이름 */
	DOCUMENT_DATA_REGDATE DATE, /* 문서자료등록일자
 */
	DOCUMENT_DATA_TYPE VARCHAR2(20), /* DOCUMENT_DATA_TYPE */
	DOCUMENT_DATA_PATH VARCHAR2(250) /* DOCUMENT_DATA_PATH */
);

COMMENT ON TABLE DOCUMENT_DATA IS 'DOCUMENT_DATA';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_DATA_NO IS '문서자료번호
';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_NO IS '문서번호';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_DATA_FILENAME IS '문서자료이름';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_DATA_REGDATE IS '문서자료등록일자
';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_DATA_TYPE IS 'DOCUMENT_DATA_TYPE';

COMMENT ON COLUMN DOCUMENT_DATA.DOCUMENT_DATA_PATH IS 'DOCUMENT_DATA_PATH';

CREATE UNIQUE INDEX DOCUMENT_DATA_PK
	ON DOCUMENT_DATA (
		DOCUMENT_DATA_NO ASC
	);

ALTER TABLE DOCUMENT_DATA
	ADD
		CONSTRAINT DOCUMENT_DATA_PK
		PRIMARY KEY (
			DOCUMENT_DATA_NO
		);

/* DRAFT */
CREATE TABLE DRAFT (
	DRAFT_NO NUMBER NOT NULL, /* 기안서번호 */
	PROFESSOR_ID VARCHAR2(150), /* 교수아이디 */
	MANAGER_ID VARCHAR2(150), /* 관리자이이디 */
	DRAFT_REGDATE DATE, /* 기안서등록일자 */
	DRAFT_DEADLINE DATE, /* 마감일자 */
	DRAFT_TITLE VARCHAR2(150), /* 기안서제목 */
	DRAFT_CHECK NUMBER, /* 동영상 0, 모집1  */
	DRAFT_CONTENT VARCHAR2(3000), /* 기안서 내용 */
	DRAFT_STATUS VARCHAR2(150), /* 승인 상태 */
	DRAFT_APPROVEDDATE DATE, /* 결재일자 */
	LECTURE_DATA_NO NUMBER /* 강의자료번호 */
);

COMMENT ON TABLE DRAFT IS 'DRAFT';

COMMENT ON COLUMN DRAFT.DRAFT_NO IS '기안서번호';

COMMENT ON COLUMN DRAFT.PROFESSOR_ID IS '교수아이디';

COMMENT ON COLUMN DRAFT.MANAGER_ID IS '관리자이이디';

COMMENT ON COLUMN DRAFT.DRAFT_REGDATE IS '기안서등록일자';

COMMENT ON COLUMN DRAFT.DRAFT_DEADLINE IS '마감일자';

COMMENT ON COLUMN DRAFT.DRAFT_TITLE IS '기안서제목';

COMMENT ON COLUMN DRAFT.DRAFT_CHECK IS '동영상 0, 모집1 ';

COMMENT ON COLUMN DRAFT.DRAFT_CONTENT IS '기안서 내용';

COMMENT ON COLUMN DRAFT.DRAFT_STATUS IS '승인 상태';

COMMENT ON COLUMN DRAFT.DRAFT_APPROVEDDATE IS '결재일자';

COMMENT ON COLUMN DRAFT.LECTURE_DATA_NO IS '강의자료번호';

CREATE UNIQUE INDEX DRAFT_PK
	ON DRAFT (
		DRAFT_NO ASC
	);

ALTER TABLE DRAFT
	ADD
		CONSTRAINT DRAFT_PK
		PRIMARY KEY (
			DRAFT_NO
		);

/* EMAIL_CERTIFICATION */
CREATE TABLE EMAIL_CERTIFICATION (
	EMAIL_NO NUMBER NOT NULL, /* 구분 번호 */
	EMAIL_CHECKTEXT VARCHAR2(200), /* 이메일인증문자 */
	EMAIL_ADDRESS VARCHAR2(100), /* 이메일주소 */
	EMAIL_CHECK VARCHAR2(20), /* 인증확인 Y or N */
	EMAIL_DATE DATE /* 인증발송시간 */
);

COMMENT ON TABLE EMAIL_CERTIFICATION IS 'EMAIL_CERTIFICATION';

COMMENT ON COLUMN EMAIL_CERTIFICATION.EMAIL_NO IS '구분 번호';

COMMENT ON COLUMN EMAIL_CERTIFICATION.EMAIL_CHECKTEXT IS '이메일인증문자';

COMMENT ON COLUMN EMAIL_CERTIFICATION.EMAIL_ADDRESS IS '이메일주소';

COMMENT ON COLUMN EMAIL_CERTIFICATION.EMAIL_CHECK IS '인증확인 Y or N';

COMMENT ON COLUMN EMAIL_CERTIFICATION.EMAIL_DATE IS '인증발송시간';

CREATE UNIQUE INDEX EMAIL_CERTIFICATION_PK
	ON EMAIL_CERTIFICATION (
		EMAIL_NO ASC
	);

ALTER TABLE EMAIL_CERTIFICATION
	ADD
		CONSTRAINT EMAIL_CERTIFICATION_PK
		PRIMARY KEY (
			EMAIL_NO
		);

/* 기업소개 */
CREATE TABLE ENTERPRISE_INTRODUCE (
	ENTERPRISE_INTRODUCE_NO NUMBER NOT NULL, /* 기업소개글 번호 */
	ENTERPRISE_INTRODUCE_WRITER VARCHAR2(100), /* 관리자아이디 */
	ENTERPRISE_NAME VARCHAR2(100), /* 회사명 */
	ENTERPRISE_REGDATE VARCHAR2(100), /* 설립일 */
	ENTERPRISE_MANAGER VARCHAR2(100), /* 대표이름 */
	ENTERPRISE_LOCATION VARCHAR2(300), /* 회사위치 */
	ENTERPRISE_REGNO VARCHAR2(100), /* 사업자등록번호 */
	ENTERPRISE_PHONE VARCHAR2(100), /* 회사번호 */
	ENTERPRISE_EMAIL VARCHAR2(100) /* 대표이메일 */
);

COMMENT ON TABLE ENTERPRISE_INTRODUCE IS '기업소개';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_INTRODUCE_NO IS '기업소개글 번호';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_INTRODUCE_WRITER IS '관리자아이디';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_NAME IS '회사명';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_REGDATE IS '설립일';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_MANAGER IS '대표이름';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_LOCATION IS '회사위치';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_REGNO IS '사업자등록번호';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_PHONE IS '회사번호';

COMMENT ON COLUMN ENTERPRISE_INTRODUCE.ENTERPRISE_EMAIL IS '대표이메일';

CREATE UNIQUE INDEX PK_ENTERPRISE_INTRODUCE
	ON ENTERPRISE_INTRODUCE (
		ENTERPRISE_INTRODUCE_NO ASC
	);

ALTER TABLE ENTERPRISE_INTRODUCE
	ADD
		CONSTRAINT PK_ENTERPRISE_INTRODUCE
		PRIMARY KEY (
			ENTERPRISE_INTRODUCE_NO
		);

/* 창업후기 */
CREATE TABLE FOUNDED_REVIEW (
	FOUNDED_REVIEW_NO NUMBER NOT NULL, /* 창업후기글번호 */
	FOUNDED_REVIEW_TITLE VARCHAR2(200), /* 제목 */
	FOUNDED_REVIEW_WRITER VARCHAR2(100), /* 수강생 */
	FOUNDED_REVIEW_REGDATE DATE, /* 등록일자 */
	FOUNDED_REVIEW_VIEWCNT NUMBER, /* 조회수 */
	FOUNDED_REVIEW_CONTENT CLOB /* 내용 */
);

COMMENT ON TABLE FOUNDED_REVIEW IS '창업후기';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_NO IS '창업후기글번호';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_TITLE IS '제목';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_WRITER IS '수강생';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_REGDATE IS '등록일자';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_VIEWCNT IS '조회수';

COMMENT ON COLUMN FOUNDED_REVIEW.FOUNDED_REVIEW_CONTENT IS '내용';

CREATE UNIQUE INDEX PK_FOUNDED_REVIEW
	ON FOUNDED_REVIEW (
		FOUNDED_REVIEW_NO ASC
	);

ALTER TABLE FOUNDED_REVIEW
	ADD
		CONSTRAINT PK_FOUNDED_REVIEW
		PRIMARY KEY (
			FOUNDED_REVIEW_NO
		);

/* 창업후기이미지 */
CREATE TABLE FOUNDED_REVIEW_IMG (
	FOUNDED_REVIEW_IMG_NO NUMBER NOT NULL, /* 이미지번호 */
	FOUNDED_REVIEW_NO NUMBER, /* 창업후기글번호 */
	FOUNDED_REVIEW_IMG_NAME VARCHAR2(200), /* 파일명 */
	FOUNDED_REVIEW_IMG_REGDATE DATE /* 등록일자 */
);

COMMENT ON TABLE FOUNDED_REVIEW_IMG IS '창업후기이미지';

COMMENT ON COLUMN FOUNDED_REVIEW_IMG.FOUNDED_REVIEW_IMG_NO IS '이미지번호';

COMMENT ON COLUMN FOUNDED_REVIEW_IMG.FOUNDED_REVIEW_NO IS '창업후기글번호';

COMMENT ON COLUMN FOUNDED_REVIEW_IMG.FOUNDED_REVIEW_IMG_NAME IS '파일명';

COMMENT ON COLUMN FOUNDED_REVIEW_IMG.FOUNDED_REVIEW_IMG_REGDATE IS '등록일자';

CREATE UNIQUE INDEX PK_FOUNDED_REVIEW_IMG
	ON FOUNDED_REVIEW_IMG (
		FOUNDED_REVIEW_IMG_NO ASC
	);

ALTER TABLE FOUNDED_REVIEW_IMG
	ADD
		CONSTRAINT PK_FOUNDED_REVIEW_IMG
		PRIMARY KEY (
			FOUNDED_REVIEW_IMG_NO
		);

/* 자유게시판 */
CREATE TABLE FREEBOARD (
	FREEBOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	FREEBOARD_TITLE VARCHAR2(200), /* 제목 */
	MEMBER_ID VARCHAR2(100), /* 수강생/교수  */
	FREEBOARD_CONTENT VARCHAR2(3000), /* 내용 */
	FREEBOARD_REGDATE DATE, /* 등록일자 */
	FREEBOARD_VIEWCNT NUMBER /* 조회수 */
);

COMMENT ON TABLE FREEBOARD IS '자유게시판';

COMMENT ON COLUMN FREEBOARD.FREEBOARD_NO IS '게시판번호';

COMMENT ON COLUMN FREEBOARD.FREEBOARD_TITLE IS '제목';

COMMENT ON COLUMN FREEBOARD.MEMBER_ID IS '수강생/교수 ';

COMMENT ON COLUMN FREEBOARD.FREEBOARD_CONTENT IS '내용';

COMMENT ON COLUMN FREEBOARD.FREEBOARD_REGDATE IS '등록일자';

COMMENT ON COLUMN FREEBOARD.FREEBOARD_VIEWCNT IS '조회수';

CREATE UNIQUE INDEX PK_FREEBOARD
	ON FREEBOARD (
		FREEBOARD_NO ASC
	);

ALTER TABLE FREEBOARD
	ADD
		CONSTRAINT PK_FREEBOARD
		PRIMARY KEY (
			FREEBOARD_NO
		);

/* FREEBOARD_REPLY */
CREATE TABLE FREEBOARD_REPLY (
	FREEBOARD_REPLY_NO NUMBER NOT NULL, /* 댓글번호 */
	FREEBOARD_REPLY_CONTENT VARCHAR2(450), /* 댓글내용 */
	FREEBOARD_REPLY_REGDATE DATE, /* 댓글등록일자 */
	FREEBOARD_NO NUMBER NOT NULL, /* 게시글번호 */
	FREEBOARD_REPLY_REPLYER VARCHAR2(50) /* 댓글게시자아이디 */
);

COMMENT ON TABLE FREEBOARD_REPLY IS 'FREEBOARD_REPLY';

COMMENT ON COLUMN FREEBOARD_REPLY.FREEBOARD_REPLY_NO IS '댓글번호';

COMMENT ON COLUMN FREEBOARD_REPLY.FREEBOARD_REPLY_CONTENT IS '댓글내용';

COMMENT ON COLUMN FREEBOARD_REPLY.FREEBOARD_REPLY_REGDATE IS '댓글등록일자';

COMMENT ON COLUMN FREEBOARD_REPLY.FREEBOARD_NO IS '게시글번호';

COMMENT ON COLUMN FREEBOARD_REPLY.FREEBOARD_REPLY_REPLYER IS '댓글게시자아이디';

CREATE UNIQUE INDEX FREEBOARD_REPLY_PK
	ON FREEBOARD_REPLY (
		FREEBOARD_REPLY_NO ASC
	);

ALTER TABLE FREEBOARD_REPLY
	ADD
		CONSTRAINT FREEBOARD_REPLY_PK
		PRIMARY KEY (
			FREEBOARD_REPLY_NO
		);

/* 강의 */
CREATE TABLE LECTURE (
	LECTURE_NO NUMBER NOT NULL, /* 강의번호 */
	PROFESSOR_ID VARCHAR2(100) NOT NULL, /* 당담교수 */
	MANAGER_ID VARCHAR2(100), /* 관리자 */
	LECTURE_DISTINCTION VARCHAR2(50), /* 교과목구분 */
	LECTURE_TITLE VARCHAR2(150), /* 제목 */
	LECTURE_PROGRESS DATE, /* 강의시작일 */
	LECTURE_RECRUIT_DATE DATE, /* 모집시작일 */
	LECTURE_RECRUIT_STATUS DATE, /* 모집마감일 */
	APPROVAL_CODE NUMBER NOT NULL, /* 결재코드
 */
	LECTURE_IMG VARCHAR2(200), /* 모집이미지 */
	LECTURE_PRICE NUMBER, /* 강의금액 */
	LECTURE_CONTENT VARCHAR2(500), /* 강의내용 */
	LECTURE_END DATE /* 강의마감일
 */
);

COMMENT ON TABLE LECTURE IS '강의';

COMMENT ON COLUMN LECTURE.LECTURE_NO IS '강의번호';

COMMENT ON COLUMN LECTURE.PROFESSOR_ID IS '당담교수';

COMMENT ON COLUMN LECTURE.MANAGER_ID IS '관리자';

COMMENT ON COLUMN LECTURE.LECTURE_DISTINCTION IS '교과목구분';

COMMENT ON COLUMN LECTURE.LECTURE_TITLE IS '제목';

COMMENT ON COLUMN LECTURE.LECTURE_PROGRESS IS '강의시작일';

COMMENT ON COLUMN LECTURE.LECTURE_RECRUIT_DATE IS '모집시작일';

COMMENT ON COLUMN LECTURE.LECTURE_RECRUIT_STATUS IS '모집마감일';

COMMENT ON COLUMN LECTURE.APPROVAL_CODE IS '결재코드
';

COMMENT ON COLUMN LECTURE.LECTURE_IMG IS '모집이미지';

COMMENT ON COLUMN LECTURE.LECTURE_PRICE IS '강의금액';

COMMENT ON COLUMN LECTURE.LECTURE_CONTENT IS '강의내용';

COMMENT ON COLUMN LECTURE.LECTURE_END IS '강의마감일
';

CREATE UNIQUE INDEX PK_LECTURE
	ON LECTURE (
		LECTURE_NO ASC,
		PROFESSOR_ID ASC
	);

ALTER TABLE LECTURE
	ADD
		CONSTRAINT PK_LECTURE
		PRIMARY KEY (
			LECTURE_NO,
			PROFESSOR_ID
		);

/* LECTURE_ATTEND */
CREATE TABLE LECTURE_ATTEND (
	LECTURE_ATTEND_NO NUMBER NOT NULL, /* 강의출석번호 */
	LECTURE_DATA_NO NUMBER NOT NULL, /* 강의동영상번호
 */
	STUDENT_ID VARCHAR2(150) NOT NULL, /* 수강생아이디 */
	LECTURE_ATTEND_DATE DATE NOT NULL, /* 출석일 */
	LECTURE_ATTEND_STATUS VARCHAR2(10) NOT NULL, /* 출석상태(미출석-Unattend,출석-attend) */
	PROFESSOR_ID VARCHAR2(150) NOT NULL /* 교수아이디
 */
);

COMMENT ON TABLE LECTURE_ATTEND IS 'LECTURE_ATTEND';

COMMENT ON COLUMN LECTURE_ATTEND.LECTURE_ATTEND_NO IS '강의출석번호';

COMMENT ON COLUMN LECTURE_ATTEND.LECTURE_DATA_NO IS '강의동영상번호
';

COMMENT ON COLUMN LECTURE_ATTEND.STUDENT_ID IS '수강생아이디';

COMMENT ON COLUMN LECTURE_ATTEND.LECTURE_ATTEND_DATE IS '출석일';

COMMENT ON COLUMN LECTURE_ATTEND.LECTURE_ATTEND_STATUS IS '출석상태(미출석-Unattend,출석-attend)';

COMMENT ON COLUMN LECTURE_ATTEND.PROFESSOR_ID IS '교수아이디
';

CREATE UNIQUE INDEX LECTURE_ATTEND_PK
	ON LECTURE_ATTEND (
		LECTURE_ATTEND_NO ASC
	);

ALTER TABLE LECTURE_ATTEND
	ADD
		CONSTRAINT LECTURE_ATTEND_PK
		PRIMARY KEY (
			LECTURE_ATTEND_NO
		);

/* 강의자료 */
CREATE TABLE LECTURE_DATA (
	LECTURE_DATA_NO NUMBER NOT NULL, /* 자료실번호 */
	LECTURE_NO NUMBER, /* 교과목 번호 */
	PROFESSOR_ID VARCHAR2(100), /* 교과목 교수 */
	LECTURE_DATA_FILENAME VARCHAR2(200), /* 동영상파일명, 문서 명 등 */
	LECTURE_DATA_STATUS NUMBER, /* 기본값 0 등록때 1 동영상 내리고 올릴때 사용 */
	LECTURE_DATA_REGDATE DATE, /* 등록일자 */
	LECTURE_DATA_VIDEO VARCHAR2(50), /* VIDEO면 동영상이고 그 외는 OTHER */
	LECTURE_DATA_IMAGE VARCHAR2(100), /* 영상 미리보기 이미지 */
	LECTURE_LASTVIEW_TIME NUMBER, /* 영상 종료시간 */
	LECTURE_DATA_MEMO VARCHAR2(3000), /* 영상 필기 */
	LECTURE_DATA_FAVORITES NUMBER /* 0=일반 ,1=즐겨찾기 */
);

COMMENT ON TABLE LECTURE_DATA IS '강의자료';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_NO IS '자료실번호';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_NO IS '교과목 번호';

COMMENT ON COLUMN LECTURE_DATA.PROFESSOR_ID IS '교과목 교수';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_FILENAME IS '동영상파일명, 문서 명 등';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_STATUS IS '기본값 0 등록때 1 동영상 내리고 올릴때 사용';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_REGDATE IS '등록일자';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_VIDEO IS 'VIDEO면 동영상이고 그 외는 OTHER';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_IMAGE IS '영상 미리보기 이미지';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_LASTVIEW_TIME IS '영상 종료시간';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_MEMO IS '영상 필기';

COMMENT ON COLUMN LECTURE_DATA.LECTURE_DATA_FAVORITES IS '0=일반 ,1=즐겨찾기';

CREATE UNIQUE INDEX PK_LECTURE_DATA
	ON LECTURE_DATA (
		LECTURE_DATA_NO ASC
	);

ALTER TABLE LECTURE_DATA
	ADD
		CONSTRAINT PK_LECTURE_DATA
		PRIMARY KEY (
			LECTURE_DATA_NO
		);

/* LECTURE_REVIEW */
CREATE TABLE LECTURE_REVIEW (
	LECTURE_REVIEW_NO NUMBER NOT NULL, /* 수강후기번호 */
	PAY_NO NUMBER, /* 결제번호에 맞춰 강좌 선택 */
	LECTURE_REVIEW_TITLE VARCHAR2(150), /* 수강후기제목
 */
	LECTURE_REVIEW_WRITER VARCHAR2(150) NOT NULL, /* 수강후기작성자 */
	LECTURE_REVIEW_CONTENT VARCHAR2(3000), /* 수강후기내용 */
	LECTURE_REVIEW_REGDATE DATE, /* 수강후기등록일자 */
	LECTURE_REVIEW_VIEWCNT NUMBER, /* 수강후기조회수 */
	LECTURE_REVIEW_LIKECNT NUMBER /* 수강후기좋아요수 */
);

COMMENT ON TABLE LECTURE_REVIEW IS 'LECTURE_REVIEW';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_NO IS '수강후기번호';

COMMENT ON COLUMN LECTURE_REVIEW.PAY_NO IS '결제번호에 맞춰 강좌 선택';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_TITLE IS '수강후기제목
';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_WRITER IS '수강후기작성자';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_CONTENT IS '수강후기내용';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_REGDATE IS '수강후기등록일자';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_VIEWCNT IS '수강후기조회수';

COMMENT ON COLUMN LECTURE_REVIEW.LECTURE_REVIEW_LIKECNT IS '수강후기좋아요수';

CREATE UNIQUE INDEX LECTURE_REVIEW_PK
	ON LECTURE_REVIEW (
		LECTURE_REVIEW_NO ASC
	);

ALTER TABLE LECTURE_REVIEW
	ADD
		CONSTRAINT LECTURE_REVIEW_PK
		PRIMARY KEY (
			LECTURE_REVIEW_NO
		);

/* LIKETABLE */
CREATE TABLE LIKETABLE (
	LIKE_NO NUMBER NOT NULL, /* LIKE_NO */
	LECTURE_REVIEW_NO NUMBER, /* LECTURE_REVIEW_NO */
	LIKE_ID VARCHAR2(250) /* LIKE_ID */
);

COMMENT ON TABLE LIKETABLE IS 'LIKETABLE';

COMMENT ON COLUMN LIKETABLE.LIKE_NO IS 'LIKE_NO';

COMMENT ON COLUMN LIKETABLE.LECTURE_REVIEW_NO IS 'LECTURE_REVIEW_NO';

COMMENT ON COLUMN LIKETABLE.LIKE_ID IS 'LIKE_ID';

CREATE UNIQUE INDEX LIKETABLE_PK
	ON LIKETABLE (
		LIKE_NO ASC
	);

ALTER TABLE LIKETABLE
	ADD
		CONSTRAINT LIKETABLE_PK
		PRIMARY KEY (
			LIKE_NO
		);

/* 관리자전용게시판 */
CREATE TABLE MANAGER_BOARD (
	MANAGER_BOARD_NO NUMBER NOT NULL, /* 매니저보드번호 */
	MANAGER_BOARD_WRITER VARCHAR2(100), /* 관리자아이디 */
	ENTERPRISE_COMING VARCHAR2(3000), /* 찾아오는길 */
	EDUCATION_CURRICULUM VARCHAR2(3000), /* 교육과정 */
	EDUCATION_PURPOSE VARCHAR2(3000), /* 교육목표 */
	CHAIRMAN_INTRODUCE VARCHAR2(3000) /* 이사장인사글 */
);

COMMENT ON TABLE MANAGER_BOARD IS '관리자전용게시판';

COMMENT ON COLUMN MANAGER_BOARD.MANAGER_BOARD_NO IS '매니저보드번호';

COMMENT ON COLUMN MANAGER_BOARD.MANAGER_BOARD_WRITER IS '관리자아이디';

COMMENT ON COLUMN MANAGER_BOARD.ENTERPRISE_COMING IS '찾아오는길';

COMMENT ON COLUMN MANAGER_BOARD.EDUCATION_CURRICULUM IS '교육과정';

COMMENT ON COLUMN MANAGER_BOARD.EDUCATION_PURPOSE IS '교육목표';

COMMENT ON COLUMN MANAGER_BOARD.CHAIRMAN_INTRODUCE IS '이사장인사글';

CREATE UNIQUE INDEX PK_MANAGER_BOARD
	ON MANAGER_BOARD (
		MANAGER_BOARD_NO ASC
	);

ALTER TABLE MANAGER_BOARD
	ADD
		CONSTRAINT PK_MANAGER_BOARD
		PRIMARY KEY (
			MANAGER_BOARD_NO
		);

/* 관리자용자료실 */
CREATE TABLE MANAGER_DATA (
	MANAGER_DATA_NO NUMBER NOT NULL, /* 매니저파일번호 */
	MANAGER_BOARD_NO NUMBER, /* 매니저 보드 번호의 내용에 따라  알맞는 파일을 가져온다  */
	POPUP_NO NUMBER, /* 팝업번호에 따라 파일을 가져온다 */
	INTRODUCE_NO NUMBER, /* 기업소개글 번호에 따라 파일을 가져온다 */
	MANAGER_DATA_FILENAME VARCHAR2(150), /* 파일명 */
	MANAGER_DATA_REGDATE DATE /* 등록일자 */
);

COMMENT ON TABLE MANAGER_DATA IS '관리자용자료실';

COMMENT ON COLUMN MANAGER_DATA.MANAGER_DATA_NO IS '매니저파일번호';

COMMENT ON COLUMN MANAGER_DATA.MANAGER_BOARD_NO IS '매니저 보드 번호의 내용에 따라  알맞는 파일을 가져온다 ';

COMMENT ON COLUMN MANAGER_DATA.POPUP_NO IS '팝업번호에 따라 파일을 가져온다';

COMMENT ON COLUMN MANAGER_DATA.INTRODUCE_NO IS '기업소개글 번호에 따라 파일을 가져온다';

COMMENT ON COLUMN MANAGER_DATA.MANAGER_DATA_FILENAME IS '파일명';

COMMENT ON COLUMN MANAGER_DATA.MANAGER_DATA_REGDATE IS '등록일자';

CREATE UNIQUE INDEX PK_MANAGER_DATA
	ON MANAGER_DATA (
		MANAGER_DATA_NO ASC
	);

ALTER TABLE MANAGER_DATA
	ADD
		CONSTRAINT PK_MANAGER_DATA
		PRIMARY KEY (
			MANAGER_DATA_NO
		);

/* 회원 */
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR2(100) NOT NULL, /* 아이디 */
	MEMBER_PWD VARCHAR2(100) NOT NULL, /* 비밀번호 */
	MEMBER_NAME VARCHAR2(50) NOT NULL, /* 이름 */
	MEMBER_POST VARCHAR2(20) NOT NULL, /* 우편번호 */
	MEMBER_ADDRESS1 VARCHAR2(50) NOT NULL, /* 주소 */
	MEMBER_ADDRESS2 VARCHAR2(100) NOT NULL, /* 상세주소 */
	MEMBER_EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
	MEMBER_PHONE VARCHAR2(50) NOT NULL, /* 연락처 */
	MEMBER_GENDER VARCHAR2(10) NOT NULL, /* 성별 */
	MEMBER_BIRTH VARCHAR2(30) NOT NULL, /* 생일 */
	MEMBER_AUTHORITY VARCHAR2(20) NOT NULL, /* 일반회원(USER)/수강생(STUDENT)/교수(PROFESSOR) */
	MEMBER_STATUS NUMBER NOT NULL, /* 2-가입대기(교수) 1-활성 및 재직 0-탈퇴 및 퇴사 */
	MEMBER_PWDCHECK NUMBER, /* 5회이상연속으로 비밀번호 틀릴시 필요한 카운트 */
	MEMBER_REGDATE DATE, /* 멤버등록일
 */
	MEMBER_PICTURE VARCHAR2(200) NOT NULL, /* 프로필사진 */
	MEMBER_INFOOPEN VARCHAR2(20) NOT NULL, /* Y-정보공개 N-비공개 */
	MEMBER_EVENTRECEPTION VARCHAR2(20) NOT NULL, /* Y-수신 N-거부 */
	MEMBER_MEMBEROUTREASON VARCHAR2(500) /* 탈퇴시 탈퇴사유내용 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '아이디';

COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '비밀번호';

COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름';

COMMENT ON COLUMN MEMBER.MEMBER_POST IS '우편번호';

COMMENT ON COLUMN MEMBER.MEMBER_ADDRESS1 IS '주소';

COMMENT ON COLUMN MEMBER.MEMBER_ADDRESS2 IS '상세주소';

COMMENT ON COLUMN MEMBER.MEMBER_EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.MEMBER_PHONE IS '연락처';

COMMENT ON COLUMN MEMBER.MEMBER_GENDER IS '성별';

COMMENT ON COLUMN MEMBER.MEMBER_BIRTH IS '생일';

COMMENT ON COLUMN MEMBER.MEMBER_AUTHORITY IS '일반회원(USER)/수강생(STUDENT)/교수(PROFESSOR)';

COMMENT ON COLUMN MEMBER.MEMBER_STATUS IS '2-가입대기(교수) 1-활성 및 재직 0-탈퇴 및 퇴사';

COMMENT ON COLUMN MEMBER.MEMBER_PWDCHECK IS '5회이상연속으로 비밀번호 틀릴시 필요한 카운트';

COMMENT ON COLUMN MEMBER.MEMBER_REGDATE IS '멤버등록일
';

COMMENT ON COLUMN MEMBER.MEMBER_PICTURE IS '프로필사진';

COMMENT ON COLUMN MEMBER.MEMBER_INFOOPEN IS 'Y-정보공개 N-비공개';

COMMENT ON COLUMN MEMBER.MEMBER_EVENTRECEPTION IS 'Y-수신 N-거부';

COMMENT ON COLUMN MEMBER.MEMBER_MEMBEROUTREASON IS '탈퇴시 탈퇴사유내용';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEMBER_ID ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEMBER_ID
		);

/* 회원이미지자료실 */
CREATE TABLE MEMBER_IMG (
	MEMBER_IMG_NO NUMBER NOT NULL, /* 이미지파일번호 */
	MEMBER_ID VARCHAR2(100), /* 수강생/교수 */
	FREEBOARD_NO NUMBER, /* 참고할 자유게시판번호 */
	MEMBER_IMG_NAME VARCHAR2(200), /* 자유게시판에 등록될 이미지/프로필 사진에 등록될 이미지 */
	MEMBER_IMG_REGDATE DATE /* 등록일자 */
);

COMMENT ON TABLE MEMBER_IMG IS '회원이미지자료실';

COMMENT ON COLUMN MEMBER_IMG.MEMBER_IMG_NO IS '이미지파일번호';

COMMENT ON COLUMN MEMBER_IMG.MEMBER_ID IS '수강생/교수';

COMMENT ON COLUMN MEMBER_IMG.FREEBOARD_NO IS '참고할 자유게시판번호';

COMMENT ON COLUMN MEMBER_IMG.MEMBER_IMG_NAME IS '자유게시판에 등록될 이미지/프로필 사진에 등록될 이미지';

COMMENT ON COLUMN MEMBER_IMG.MEMBER_IMG_REGDATE IS '등록일자';

CREATE UNIQUE INDEX PK_MEMBER_IMG
	ON MEMBER_IMG (
		MEMBER_IMG_NO ASC
	);

ALTER TABLE MEMBER_IMG
	ADD
		CONSTRAINT PK_MEMBER_IMG
		PRIMARY KEY (
			MEMBER_IMG_NO
		);

/* 메뉴 */
CREATE TABLE MENU (
	MENU_CODE VARCHAR2(30) NOT NULL, /* 메뉴의코드 */
	MENU_NAME VARCHAR2(100), /* 메뉴의이름 */
	MENU_URL VARCHAR2(100), /* 메뉴의 URL주소 */
	MENU_ICONFILE VARCHAR2(50), /* 메뉴가 갖고있는 아이콘파일 */
	MENU_UPCODE VARCHAR2(30), /* 메뉴의 상위코드를 나타낸다 */
	MENU_ENABLE NUMBER, /* 메뉴의 활성화 비활성화를 나타낸다 1  활성화 0 비활성화 */
	MENU_ISCATEGORY NUMBER, /* 카테고리가 달려있으면 1 없으면 0 보통 하위 코드는 갖고 있지 않다 */
	MENU_CODELEVEL NUMBER, /* 메뉴의 단계 구조 레벨 */
	MENU_SCRIPT VARCHAR2(1500) /* 메뉴가 갖고 있는 스크립트 */
);

COMMENT ON TABLE MENU IS '메뉴';

COMMENT ON COLUMN MENU.MENU_CODE IS '메뉴의코드';

COMMENT ON COLUMN MENU.MENU_NAME IS '메뉴의이름';

COMMENT ON COLUMN MENU.MENU_URL IS '메뉴의 URL주소';

COMMENT ON COLUMN MENU.MENU_ICONFILE IS '메뉴가 갖고있는 아이콘파일';

COMMENT ON COLUMN MENU.MENU_UPCODE IS '메뉴의 상위코드를 나타낸다';

COMMENT ON COLUMN MENU.MENU_ENABLE IS '메뉴의 활성화 비활성화를 나타낸다 1  활성화 0 비활성화';

COMMENT ON COLUMN MENU.MENU_ISCATEGORY IS '카테고리가 달려있으면 1 없으면 0 보통 하위 코드는 갖고 있지 않다';

COMMENT ON COLUMN MENU.MENU_CODELEVEL IS '메뉴의 단계 구조 레벨';

COMMENT ON COLUMN MENU.MENU_SCRIPT IS '메뉴가 갖고 있는 스크립트';

CREATE UNIQUE INDEX PK_MENU
	ON MENU (
		MENU_CODE ASC
	);

ALTER TABLE MENU
	ADD
		CONSTRAINT PK_MENU
		PRIMARY KEY (
			MENU_CODE
		);

/* 쪽지자료실 */
CREATE TABLE MESSAGE_ATTACH (
	MESSAGE_ATTACH_NO NUMBER NOT NULL, /* 쪽지함자료실번호 */
	MESSENGER_NO NUMBER, /* 발신자번호 */
	MESSAGE_ATTACH_FILENAME VARCHAR2(250), /* 쪽지함파일이름 */
	MESSAGE_ATTACH_REGDATE DATE, /* 쪽지함파일등록일자 */
	RECEIVER_NO NUMBER, /* 수신자번호 */
	MESSAGE_ATTACH_PATH VARCHAR2(250) /* 파일경로 */
);

COMMENT ON TABLE MESSAGE_ATTACH IS '쪽지자료실';

COMMENT ON COLUMN MESSAGE_ATTACH.MESSAGE_ATTACH_NO IS '쪽지함자료실번호';

COMMENT ON COLUMN MESSAGE_ATTACH.MESSENGER_NO IS '발신자번호';

COMMENT ON COLUMN MESSAGE_ATTACH.MESSAGE_ATTACH_FILENAME IS '쪽지함파일이름';

COMMENT ON COLUMN MESSAGE_ATTACH.MESSAGE_ATTACH_REGDATE IS '쪽지함파일등록일자';

COMMENT ON COLUMN MESSAGE_ATTACH.RECEIVER_NO IS '수신자번호';

COMMENT ON COLUMN MESSAGE_ATTACH.MESSAGE_ATTACH_PATH IS '파일경로';

CREATE UNIQUE INDEX PK_MESSAGENER_ATTACH
	ON MESSAGE_ATTACH (
		MESSAGE_ATTACH_NO ASC
	);

ALTER TABLE MESSAGE_ATTACH
	ADD
		CONSTRAINT PK_MESSAGENER_ATTACH
		PRIMARY KEY (
			MESSAGE_ATTACH_NO
		);

/* 쪽지발신 */
CREATE TABLE MESSENGER (
	MESSENGER_NO NUMBER NOT NULL, /* 발신번호 */
	MESSENGER_WRITER VARCHAR2(150), /* 발신자 */
	MESSENGER_CONTENT VARCHAR2(1500), /* 발신내용 */
	MESSENGER_SENDDATE DATE, /* 발신일자 */
	MESSENGER_STATUS NUMBER, /* 기본값1 0일때 휴지통으로 보낸다. */
	MESSENGER_RECEIVER VARCHAR2(150), /* 수신자 */
	MESSENGER_TITLE VARCHAR2(100), /* 발신제목 */
	MESSENGER_CHECK VARCHAR2(10), /* 조회여부 */
	MESSENGER_FILECHECK VARCHAR2(10) /* 파일체크 */
);

COMMENT ON TABLE MESSENGER IS '쪽지발신';

COMMENT ON COLUMN MESSENGER.MESSENGER_NO IS '발신번호';

COMMENT ON COLUMN MESSENGER.MESSENGER_WRITER IS '발신자';

COMMENT ON COLUMN MESSENGER.MESSENGER_CONTENT IS '발신내용';

COMMENT ON COLUMN MESSENGER.MESSENGER_SENDDATE IS '발신일자';

COMMENT ON COLUMN MESSENGER.MESSENGER_STATUS IS '기본값1 0일때 휴지통으로 보낸다.';

COMMENT ON COLUMN MESSENGER.MESSENGER_RECEIVER IS '수신자';

COMMENT ON COLUMN MESSENGER.MESSENGER_TITLE IS '발신제목';

COMMENT ON COLUMN MESSENGER.MESSENGER_CHECK IS '조회여부';

COMMENT ON COLUMN MESSENGER.MESSENGER_FILECHECK IS '파일체크';

CREATE UNIQUE INDEX PK_MESSAGENER
	ON MESSENGER (
		MESSENGER_NO ASC
	);

ALTER TABLE MESSENGER
	ADD
		CONSTRAINT PK_MESSAGENER
		PRIMARY KEY (
			MESSENGER_NO
		);

/* 공지사항 */
CREATE TABLE NOTICE (
	NOTICE_NO NUMBER NOT NULL, /* 공지사항번호 */
	NOTICE_TITLE VARCHAR2(250), /* 제목 */
	NOTICE_WRITER VARCHAR2(100), /* 관리자 */
	NOTICE_REGDATE DATE, /* 등록일자 */
	NOTICE_UPDATE_DATE DATE, /* 수정일자 */
	NOTICE_VIEWCNT NUMBER, /* 조회수 */
	NOTICE_POINT VARCHAR2(30), /* 게시판 이름 = 코드(중요공지글)
 */
	NOTICE_FINISHDATE DATE, /* 게시글 마감일 */
	NOTICE_CONTENT CLOB /* 내용 */
);

COMMENT ON TABLE NOTICE IS '공지사항';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '제목';

COMMENT ON COLUMN NOTICE.NOTICE_WRITER IS '관리자';

COMMENT ON COLUMN NOTICE.NOTICE_REGDATE IS '등록일자';

COMMENT ON COLUMN NOTICE.NOTICE_UPDATE_DATE IS '수정일자';

COMMENT ON COLUMN NOTICE.NOTICE_VIEWCNT IS '조회수';

COMMENT ON COLUMN NOTICE.NOTICE_POINT IS '게시판 이름 = 코드(중요공지글)
';

COMMENT ON COLUMN NOTICE.NOTICE_FINISHDATE IS '게시글 마감일';

COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '내용';

CREATE UNIQUE INDEX PK_NOTICE
	ON NOTICE (
		NOTICE_NO ASC
	);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT PK_NOTICE
		PRIMARY KEY (
			NOTICE_NO
		);

/* 공지사항파일 */
CREATE TABLE NOTICE_DATA (
	NOTICE_DATA_NO NUMBER NOT NULL, /* 파일번호 */
	NOTICE_NO NUMBER, /* 공지사항번호 */
	NOTICE_FILENAME VARCHAR2(200), /* 파일명 */
	NOTICE_REGDATE DATE, /* 등록일자 */
	NOTICE_FILEUPLOADPATH VARCHAR2(500), /* 파일경로 */
	NOTICE_FILETYPE VARCHAR2(20), /* NOTICE_FILETYPE */
	UUID VARCHAR2(100) /* UUID */
);

COMMENT ON TABLE NOTICE_DATA IS '공지사항파일';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_DATA_NO IS '파일번호';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_FILENAME IS '파일명';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_REGDATE IS '등록일자';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_FILEUPLOADPATH IS '파일경로';

COMMENT ON COLUMN NOTICE_DATA.NOTICE_FILETYPE IS 'NOTICE_FILETYPE';

COMMENT ON COLUMN NOTICE_DATA.UUID IS 'UUID';

CREATE UNIQUE INDEX PK_NOTICE_DATA
	ON NOTICE_DATA (
		NOTICE_DATA_NO ASC
	);

ALTER TABLE NOTICE_DATA
	ADD
		CONSTRAINT PK_NOTICE_DATA
		PRIMARY KEY (
			NOTICE_DATA_NO
		);

/* 결제 */
CREATE TABLE PAY (
	PAY_NO NUMBER NOT NULL, /* 결제내역번호 */
	LECTURE_NO NUMBER, /* 강의번호 */
	PROFESSOR_ID VARCHAR2(100), /* 교과목 교수 */
	STUDENT_ID VARCHAR2(100), /* 수강생아이디 */
	CLASS_NAME VARCHAR2(150), /* 강의명 */
	PAY_PRICE NUMBER, /* 금액 */
	PAY_COMPLETE_DATE DATE, /* 결제일자 */
	PAY_METHOD VARCHAR2(30), /* 결제방법 */
	LECTURE_REGIST_NO NUMBER, /* 수강번호 */
	REVIEW_CHECK NUMBER /* 1일시 리뷰 작성자 */
);

COMMENT ON TABLE PAY IS '결제';

COMMENT ON COLUMN PAY.PAY_NO IS '결제내역번호';

COMMENT ON COLUMN PAY.LECTURE_NO IS '강의번호';

COMMENT ON COLUMN PAY.PROFESSOR_ID IS '교과목 교수';

COMMENT ON COLUMN PAY.STUDENT_ID IS '수강생아이디';

COMMENT ON COLUMN PAY.CLASS_NAME IS '강의명';

COMMENT ON COLUMN PAY.PAY_PRICE IS '금액';

COMMENT ON COLUMN PAY.PAY_COMPLETE_DATE IS '결제일자';

COMMENT ON COLUMN PAY.PAY_METHOD IS '결제방법';

COMMENT ON COLUMN PAY.LECTURE_REGIST_NO IS '수강번호';

COMMENT ON COLUMN PAY.REVIEW_CHECK IS '1일시 리뷰 작성자';

CREATE UNIQUE INDEX PK_PAY
	ON PAY (
		PAY_NO ASC
	);

ALTER TABLE PAY
	ADD
		CONSTRAINT PK_PAY
		PRIMARY KEY (
			PAY_NO
		);

/* 팝업 */
CREATE TABLE POPUP (
	POPUP_NO NUMBER NOT NULL, /* 팝업번호 */
	POPUP_WRITER VARCHAR2(100) /* 매니저아이디 */
);

COMMENT ON TABLE POPUP IS '팝업';

COMMENT ON COLUMN POPUP.POPUP_NO IS '팝업번호';

COMMENT ON COLUMN POPUP.POPUP_WRITER IS '매니저아이디';

CREATE UNIQUE INDEX PK_POPUP
	ON POPUP (
		POPUP_NO ASC
	);

ALTER TABLE POPUP
	ADD
		CONSTRAINT PK_POPUP
		PRIMARY KEY (
			POPUP_NO
		);

/* 교수 */
CREATE TABLE PROFESSOR (
	PROFESSOR_ID VARCHAR2(100) NOT NULL, /* 아이디 */
	PROFESSOR_HOPE_SUBJECT VARCHAR2(100), /* 원하는 강의
 */
	PROFESSOR_SUBJECT VARCHAR2(100), /* 맡게된 강의 */
	PROFESSOR_REMARK VARCHAR2(1500), /* 비고 */
	PROFESSOR_CAREER_EDUCATION VARCHAR2(30) /* 학력 */
);

COMMENT ON TABLE PROFESSOR IS '교수';

COMMENT ON COLUMN PROFESSOR.PROFESSOR_ID IS '아이디';

COMMENT ON COLUMN PROFESSOR.PROFESSOR_HOPE_SUBJECT IS '원하는 강의
';

COMMENT ON COLUMN PROFESSOR.PROFESSOR_SUBJECT IS '맡게된 강의';

COMMENT ON COLUMN PROFESSOR.PROFESSOR_REMARK IS '비고';

COMMENT ON COLUMN PROFESSOR.PROFESSOR_CAREER_EDUCATION IS '학력';

CREATE UNIQUE INDEX PK_PROFESSOR
	ON PROFESSOR (
		PROFESSOR_ID ASC
	);

ALTER TABLE PROFESSOR
	ADD
		CONSTRAINT PK_PROFESSOR
		PRIMARY KEY (
			PROFESSOR_ID
		);

/* 교수경력사항 */
CREATE TABLE PROFESSOR_CAREER (
	PROFESSOR_CAREER_NO NUMBER NOT NULL, /* 경력사항순번 */
	PROFESSOR_ID VARCHAR2(100), /* 교수아이디 */
	PROFESSOR_CAREER_COMPANY_NAME VARCHAR2(100), /* 다녔던 회사 */
	PROFESSOR_CAREER_MAINJOB VARCHAR2(100), /* 했던 업무 */
	PROFESSOR_CAREER_POSITION VARCHAR2(50), /* 맡았던 직책 */
	PROFESSOR_CAREER VARCHAR2(200), /* 경력증명서 */
	PROFESSOR_CAREER_STARTDATE VARCHAR2(50), /* 재직 시작날짜 */
	PROFESSOR_CAREER_LASTDATE VARCHAR2(50) /* 재직 종료날짜 */
);

COMMENT ON TABLE PROFESSOR_CAREER IS '교수경력사항';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_NO IS '경력사항순번';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_ID IS '교수아이디';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_COMPANY_NAME IS '다녔던 회사';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_MAINJOB IS '했던 업무';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_POSITION IS '맡았던 직책';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER IS '경력증명서';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_STARTDATE IS '재직 시작날짜';

COMMENT ON COLUMN PROFESSOR_CAREER.PROFESSOR_CAREER_LASTDATE IS '재직 종료날짜';

CREATE UNIQUE INDEX PK_PROFESSOR_CARRER
	ON PROFESSOR_CAREER (
		PROFESSOR_CAREER_NO ASC
	);

ALTER TABLE PROFESSOR_CAREER
	ADD
		CONSTRAINT PK_PROFESSOR_CARRER
		PRIMARY KEY (
			PROFESSOR_CAREER_NO
		);

/* 창업계획서 */
CREATE TABLE PROPOSAL (
	PROPOSAL_NUM NUMBER NOT NULL, /* 계획서번호 */
	PROPOSAL_WRITER VARCHAR2(100), /* 수강생의 이름 */
	PROPOSAL_MOTIVATION VARCHAR2(3000), /* 창업 목적및 배경 */
	PROPOSAL_IDEA VARCHAR2(3000), /* 창업 아이템의 내용 및 특성 */
	PROPOSAL_PROPULSION VARCHAR2(3000), /* 상품개발 및 사업화 목표, 창업 후 추진계획 */
	PROPOSAL_MARKET VARCHAR2(3000), /* 매출 실현 가능성, 판로개척 방안등 */
	PROPOSAL_FUNDS VARCHAR2(3000), /* 수익 전망 및 손익분기 예상시기 등 */
	PROPOSAL_EFFECT VARCHAR2(3000), /* 사업 성공에 따른 인력채용 효과 등 */
	PROPOSAL_REGDATE DATE, /* 작성날짜 */
	PROPOSAL_TITLE VARCHAR2(100) /* 창업계획명 */
);

COMMENT ON TABLE PROPOSAL IS '창업계획서';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_NUM IS '계획서번호';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_WRITER IS '수강생의 이름';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_MOTIVATION IS '창업 목적및 배경';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_IDEA IS '창업 아이템의 내용 및 특성';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_PROPULSION IS '상품개발 및 사업화 목표, 창업 후 추진계획';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_MARKET IS '매출 실현 가능성, 판로개척 방안등';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_FUNDS IS '수익 전망 및 손익분기 예상시기 등';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_EFFECT IS '사업 성공에 따른 인력채용 효과 등';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_REGDATE IS '작성날짜';

COMMENT ON COLUMN PROPOSAL.PROPOSAL_TITLE IS '창업계획명';

CREATE UNIQUE INDEX PK_PROPOSAL
	ON PROPOSAL (
		PROPOSAL_NUM ASC
	);

ALTER TABLE PROPOSAL
	ADD
		CONSTRAINT PK_PROPOSAL
		PRIMARY KEY (
			PROPOSAL_NUM
		);

/* 질의응답 */
CREATE TABLE QNA (
	QNA_NO NUMBER NOT NULL, /* 질의문번호 */
	QNA_WRITER VARCHAR2(100), /* 작성자 */
	QNA_ANSWER VARCHAR2(100), /* 답변자 */
	QNA_TITLE VARCHAR2(200), /* 제목 */
	QNA_CONTENT VARCHAR2(1500), /* 내용 */
	QNA_REGDATE DATE, /* 질의일자 */
	ANSWER_CONTENT VARCHAR2(1500), /* 답변내용 */
	ANSWER_DATE DATE, /* 답변날자 */
	QNA_VIEWCNT NUMBER, /* 조회수 */
	QNA_STATUS NUMBER, /* 답변유무 0이 기본값 1일시 답변 O */
	QNA_TYPE VARCHAR2(10), /* 타입 */
	QNA_PASSWORD VARCHAR2(100), /* 질문글 비밀번호 */
	PROFESSOR_ID VARCHAR2(100), /* 문답을 맡을 교수 */
	AUTO_REMOVE NUMBER /* 게시기간이 지나면 리스트에서 제외 */
);

COMMENT ON TABLE QNA IS '질의응답';

COMMENT ON COLUMN QNA.QNA_NO IS '질의문번호';

COMMENT ON COLUMN QNA.QNA_WRITER IS '작성자';

COMMENT ON COLUMN QNA.QNA_ANSWER IS '답변자';

COMMENT ON COLUMN QNA.QNA_TITLE IS '제목';

COMMENT ON COLUMN QNA.QNA_CONTENT IS '내용';

COMMENT ON COLUMN QNA.QNA_REGDATE IS '질의일자';

COMMENT ON COLUMN QNA.ANSWER_CONTENT IS '답변내용';

COMMENT ON COLUMN QNA.ANSWER_DATE IS '답변날자';

COMMENT ON COLUMN QNA.QNA_VIEWCNT IS '조회수';

COMMENT ON COLUMN QNA.QNA_STATUS IS '답변유무 0이 기본값 1일시 답변 O';

COMMENT ON COLUMN QNA.QNA_TYPE IS '타입';

COMMENT ON COLUMN QNA.QNA_PASSWORD IS '질문글 비밀번호';

COMMENT ON COLUMN QNA.PROFESSOR_ID IS '문답을 맡을 교수';

COMMENT ON COLUMN QNA.AUTO_REMOVE IS '게시기간이 지나면 리스트에서 제외';

CREATE UNIQUE INDEX PK_QNA
	ON QNA (
		QNA_NO ASC
	);

ALTER TABLE QNA
	ADD
		CONSTRAINT PK_QNA
		PRIMARY KEY (
			QNA_NO
		);

/* 쪽지수신 */
CREATE TABLE RECEIVER (
	RECEIVER_NO NUMBER NOT NULL, /* 수신번호 */
	RECEIVER_ID VARCHAR2(150), /* 수신자 */
	RECEIVER_CONTENT VARCHAR2(1500), /* 수신내용 */
	RECEIVER_DATE DATE, /* 수신일자 */
	RECEIVER_STATUS NUMBER, /* 기본값3 2일때 휴지통으로 보낸다 */
	RECEIVER_SENDER VARCHAR2(150), /* 발신자
 */
	RECEIVER_TITLE VARCHAR2(150), /* 제목 */
	RECEIVER_CHECK VARCHAR2(10), /* 읽기여부 */
	RECEIVER_FILECHECK VARCHAR2(10) /* 파일체크
 */
);

COMMENT ON TABLE RECEIVER IS '쪽지수신';

COMMENT ON COLUMN RECEIVER.RECEIVER_NO IS '수신번호';

COMMENT ON COLUMN RECEIVER.RECEIVER_ID IS '수신자';

COMMENT ON COLUMN RECEIVER.RECEIVER_CONTENT IS '수신내용';

COMMENT ON COLUMN RECEIVER.RECEIVER_DATE IS '수신일자';

COMMENT ON COLUMN RECEIVER.RECEIVER_STATUS IS '기본값3 2일때 휴지통으로 보낸다';

COMMENT ON COLUMN RECEIVER.RECEIVER_SENDER IS '발신자
';

COMMENT ON COLUMN RECEIVER.RECEIVER_TITLE IS '제목';

COMMENT ON COLUMN RECEIVER.RECEIVER_CHECK IS '읽기여부';

COMMENT ON COLUMN RECEIVER.RECEIVER_FILECHECK IS '파일체크
';

CREATE UNIQUE INDEX PK_RECEIVER
	ON RECEIVER (
		RECEIVER_NO ASC
	);

ALTER TABLE RECEIVER
	ADD
		CONSTRAINT PK_RECEIVER
		PRIMARY KEY (
			RECEIVER_NO
		);

/* 환불 */
CREATE TABLE REFUND (
	REFUND_NO NUMBER NOT NULL, /* 환불번호 */
	PAY_NO NUMBER, /* 결제번호 */
	REFUND_METHOD VARCHAR2(30), /* 환불에 쓰인 방법 */
	REFUND_DATE DATE, /* 환불일자 */
	CLASS_NAME VARCHAR2(150) /* 환불강의명 */
);

COMMENT ON TABLE REFUND IS '환불';

COMMENT ON COLUMN REFUND.REFUND_NO IS '환불번호';

COMMENT ON COLUMN REFUND.PAY_NO IS '결제번호';

COMMENT ON COLUMN REFUND.REFUND_METHOD IS '환불에 쓰인 방법';

COMMENT ON COLUMN REFUND.REFUND_DATE IS '환불일자';

COMMENT ON COLUMN REFUND.CLASS_NAME IS '환불강의명';

CREATE UNIQUE INDEX PK_REFUND
	ON REFUND (
		REFUND_NO ASC
	);

ALTER TABLE REFUND
	ADD
		CONSTRAINT PK_REFUND
		PRIMARY KEY (
			REFUND_NO
		);

/* 수강생 */
CREATE TABLE STUDENT (
	STUDENT_ID VARCHAR2(100) NOT NULL, /* 아이디 */
	STUDENT_HOPE_BUSINESS VARCHAR2(100), /* 원하는 분야 */
	STUDENT_EXPERIENCE VARCHAR2(10), /* 경험 유-"Y , 무- "N" */
	STUDENT_BUSINESS_PURPOSE VARCHAR2(300), /* 창업의목적 */
	STUDENT_REMARK VARCHAR2(1500) /* 비고 */
);

COMMENT ON TABLE STUDENT IS '수강생';

COMMENT ON COLUMN STUDENT.STUDENT_ID IS '아이디';

COMMENT ON COLUMN STUDENT.STUDENT_HOPE_BUSINESS IS '원하는 분야';

COMMENT ON COLUMN STUDENT.STUDENT_EXPERIENCE IS '경험 유-"Y , 무- "N"';

COMMENT ON COLUMN STUDENT.STUDENT_BUSINESS_PURPOSE IS '창업의목적';

COMMENT ON COLUMN STUDENT.STUDENT_REMARK IS '비고';

CREATE UNIQUE INDEX PK_STUDENT
	ON STUDENT (
		STUDENT_ID ASC
	);

ALTER TABLE STUDENT
	ADD
		CONSTRAINT PK_STUDENT
		PRIMARY KEY (
			STUDENT_ID
		);

/* 수강생자격증 */
CREATE TABLE STUDENT_CERTIFICATE (
	STUDENT_CERTIFICATE_NO NUMBER NOT NULL, /* 자격증번호 */
	STUDENT_ID VARCHAR2(100), /* 수강생아이디 */
	STUDENT_CERTIFICATE_NAME VARCHAR2(100), /* 자격증명 */
	STUDENT_CERTIFICATE_DIVISION VARCHAR2(100), /* 자격구분 */
	STUDENT_CERTIFICATE_DATE VARCHAR2(100), /* 취득일자 */
	STUDENT_CERTIFICATE_AGENCY VARCHAR2(100) /* 발급한기관 */
);

COMMENT ON TABLE STUDENT_CERTIFICATE IS '수강생자격증';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_CERTIFICATE_NO IS '자격증번호';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_ID IS '수강생아이디';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_CERTIFICATE_NAME IS '자격증명';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_CERTIFICATE_DIVISION IS '자격구분';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_CERTIFICATE_DATE IS '취득일자';

COMMENT ON COLUMN STUDENT_CERTIFICATE.STUDENT_CERTIFICATE_AGENCY IS '발급한기관';

CREATE UNIQUE INDEX PK_STUDENT_CERTIFICATE
	ON STUDENT_CERTIFICATE (
		STUDENT_CERTIFICATE_NO ASC
	);

ALTER TABLE STUDENT_CERTIFICATE
	ADD
		CONSTRAINT PK_STUDENT_CERTIFICATE
		PRIMARY KEY (
			STUDENT_CERTIFICATE_NO
		);

/* STUDENT_RECRUIT */
CREATE TABLE STUDENT_RECRUIT (
	STUDENT_RECRUIT_NO NUMBER NOT NULL, /* 수강생모집과정번호 */
	MANAGER_ID VARCHAR2(100), /* 매니저아이디
 */
	STUDENT_RECRUIT_DATE DATE, /* 모집기간 */
	STUDENT_RECRUIT_STATUS NUMBER /* 모집과정상태 */
);

COMMENT ON TABLE STUDENT_RECRUIT IS 'STUDENT_RECRUIT';

COMMENT ON COLUMN STUDENT_RECRUIT.STUDENT_RECRUIT_NO IS '수강생모집과정번호';

COMMENT ON COLUMN STUDENT_RECRUIT.MANAGER_ID IS '매니저아이디
';

COMMENT ON COLUMN STUDENT_RECRUIT.STUDENT_RECRUIT_DATE IS '모집기간';

COMMENT ON COLUMN STUDENT_RECRUIT.STUDENT_RECRUIT_STATUS IS '모집과정상태';

CREATE UNIQUE INDEX STUDENT_RECRUIT_PK
	ON STUDENT_RECRUIT (
		STUDENT_RECRUIT_NO ASC
	);

ALTER TABLE STUDENT_RECRUIT
	ADD
		CONSTRAINT STUDENT_RECRUIT_PK
		PRIMARY KEY (
			STUDENT_RECRUIT_NO
		);

ALTER TABLE CERTIFICATE
	ADD
		CONSTRAINT FK_STUDENT_TO_CERTIFICATE
		FOREIGN KEY (
			STUDENT_ID
		)
		REFERENCES STUDENT (
			STUDENT_ID
		);

ALTER TABLE CHEER
	ADD
		CONSTRAINT CHEER_FK1
		FOREIGN KEY (
			CHEER_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)
		ON DELETE CASCADE;

ALTER TABLE CONSULT
	ADD
		CONSTRAINT CONSULT_FK1
		FOREIGN KEY (
			CONSULT_ANSWER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE CONSULT
	ADD
		CONSTRAINT FK_MEMBER_TO_CONSULT
		FOREIGN KEY (
			CONSULT_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE DOCUMENT
	ADD
		CONSTRAINT DOCUMENT_FK1
		FOREIGN KEY (
			DOCUMENT_WRITER
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE DOCUMENT_DATA
	ADD
		CONSTRAINT DOCUMENT_DATA_FK1
		FOREIGN KEY (
			DOCUMENT_NO
		)
		REFERENCES DOCUMENT (
			DOCUMENT_NO
		)
		ON DELETE CASCADE;

ALTER TABLE DRAFT
	ADD
		CONSTRAINT DRAFT_FK1
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE DRAFT
	ADD
		CONSTRAINT DRAFT_FK2
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE DRAFT
	ADD
		CONSTRAINT DRAFT_FK3
		FOREIGN KEY (
			LECTURE_DATA_NO
		)
		REFERENCES LECTURE_DATA (
			LECTURE_DATA_NO
		);

ALTER TABLE ENTERPRISE_INTRODUCE
	ADD
		CONSTRAINT ENTERPRISE_INTRODUCE_FK1
		FOREIGN KEY (
			ENTERPRISE_INTRODUCE_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE FOUNDED_REVIEW
	ADD
		CONSTRAINT FK_STUDENT_TO_FOUNDED_REVIEW
		FOREIGN KEY (
			FOUNDED_REVIEW_WRITER
		)
		REFERENCES STUDENT (
			STUDENT_ID
		)
		ON DELETE CASCADE;

ALTER TABLE FOUNDED_REVIEW_IMG
	ADD
		CONSTRAINT FOUNDED_REVIEW_IMG_FK1
		FOREIGN KEY (
			FOUNDED_REVIEW_NO
		)
		REFERENCES FOUNDED_REVIEW (
			FOUNDED_REVIEW_NO
		);

ALTER TABLE FREEBOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_FREEBOARD
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE FREEBOARD_REPLY
	ADD
		CONSTRAINT FREEBOARD_REPLY_FK2
		FOREIGN KEY (
			FREEBOARD_NO
		)
		REFERENCES FREEBOARD (
			FREEBOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE LECTURE
	ADD
		CONSTRAINT FK_PROFESSOR_TO_LECTURE
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE LECTURE
	ADD
		CONSTRAINT FK_MANAGER_TO_LECTURE
		FOREIGN KEY (
			MANAGER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE LECTURE_ATTEND
	ADD
		CONSTRAINT LECTURE_ATTEND_FK2
		FOREIGN KEY (
			STUDENT_ID
		)
		REFERENCES STUDENT (
			STUDENT_ID
		);

ALTER TABLE LECTURE_ATTEND
	ADD
		CONSTRAINT LECTURE_ATTEND_FK3
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE LECTURE_ATTEND
	ADD
		CONSTRAINT LECTURE_ATTEND_FK1
		FOREIGN KEY (
			LECTURE_DATA_NO
		)
		REFERENCES LECTURE_DATA (
			LECTURE_DATA_NO
		);

ALTER TABLE LECTURE_DATA
	ADD
		CONSTRAINT FK_LECTURE_TO_LECTURE_DATA
		FOREIGN KEY (
			LECTURE_NO,
			PROFESSOR_ID
		)
		REFERENCES LECTURE (
			LECTURE_NO,
			PROFESSOR_ID
		)
		ON DELETE CASCADE;

ALTER TABLE LECTURE_REVIEW
	ADD
		CONSTRAINT LECTURE_REVIEW_FK1
		FOREIGN KEY (
			PAY_NO
		)
		REFERENCES PAY (
			PAY_NO
		);

ALTER TABLE LIKETABLE
	ADD
		CONSTRAINT LIKETABLE_FK1
		FOREIGN KEY (
			LECTURE_REVIEW_NO
		)
		REFERENCES LECTURE_REVIEW (
			LECTURE_REVIEW_NO
		);

ALTER TABLE MANAGER_BOARD
	ADD
		CONSTRAINT MANAGER_BOARD_FK1
		FOREIGN KEY (
			MANAGER_BOARD_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE MANAGER_DATA
	ADD
		CONSTRAINT FK_INTRODUCE_TO_MANAGER_DATA
		FOREIGN KEY (
			INTRODUCE_NO
		)
		REFERENCES ENTERPRISE_INTRODUCE (
			ENTERPRISE_INTRODUCE_NO
		);

ALTER TABLE MANAGER_DATA
	ADD
		CONSTRAINT FK_POPUP_TO_MANAGER_DATA
		FOREIGN KEY (
			POPUP_NO
		)
		REFERENCES POPUP (
			POPUP_NO
		);

ALTER TABLE MANAGER_DATA
	ADD
		CONSTRAINT FK_MNG_BOARD_TO_MANAGER_DATA
		FOREIGN KEY (
			MANAGER_BOARD_NO
		)
		REFERENCES MANAGER_BOARD (
			MANAGER_BOARD_NO
		);

ALTER TABLE MEMBER_IMG
	ADD
		CONSTRAINT FK_MEMBER_TO_MEMBER_IMG
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE MEMBER_IMG
	ADD
		CONSTRAINT FK_FREEBOARD_TO_MEMBER_IMG
		FOREIGN KEY (
			FREEBOARD_NO
		)
		REFERENCES FREEBOARD (
			FREEBOARD_NO
		);

ALTER TABLE MESSAGE_ATTACH
	ADD
		CONSTRAINT MESSAGE_ATTACH_FK2
		FOREIGN KEY (
			RECEIVER_NO
		)
		REFERENCES RECEIVER (
			RECEIVER_NO
		)
		ON DELETE CASCADE;

ALTER TABLE MESSAGE_ATTACH
	ADD
		CONSTRAINT MESSAGE_ATTACH_FK1
		FOREIGN KEY (
			MESSENGER_NO
		)
		REFERENCES MESSENGER (
			MESSENGER_NO
		)
		ON DELETE CASCADE;

ALTER TABLE MESSENGER
	ADD
		CONSTRAINT FK_PROFESSOR_TO_MESSAGENER
		FOREIGN KEY (
			MESSENGER_WRITER
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT FK_MANAGER_TO_NOTICE
		FOREIGN KEY (
			NOTICE_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE NOTICE_DATA
	ADD
		CONSTRAINT FK_NOTICE_TO_NOTICE_DATA
		FOREIGN KEY (
			NOTICE_NO
		)
		REFERENCES NOTICE (
			NOTICE_NO
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT FK_STUDENT_TO_PAY
		FOREIGN KEY (
			STUDENT_ID
		)
		REFERENCES STUDENT (
			STUDENT_ID
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT PAY_FK1
		FOREIGN KEY (
			LECTURE_NO,
			PROFESSOR_ID
		)
		REFERENCES LECTURE (
			LECTURE_NO,
			PROFESSOR_ID
		);

ALTER TABLE POPUP
	ADD
		CONSTRAINT FK_MANAGER_TO_POPUP
		FOREIGN KEY (
			POPUP_WRITER
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PROFESSOR
	ADD
		CONSTRAINT FK_MEMBER_TO_PROFESSOR
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PROFESSOR_CAREER
	ADD
		CONSTRAINT PROFESSOR_CAREER_FK1
		FOREIGN KEY (
			PROFESSOR_ID
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		)
		ON DELETE CASCADE;

ALTER TABLE PROPOSAL
	ADD
		CONSTRAINT FK_STUDENT_TO_PROPOSAL
		FOREIGN KEY (
			PROPOSAL_WRITER
		)
		REFERENCES STUDENT (
			STUDENT_ID
		);

ALTER TABLE QNA
	ADD
		CONSTRAINT FK_PROFESSOR_TO_QNA
		FOREIGN KEY (
			QNA_ANSWER
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE RECEIVER
	ADD
		CONSTRAINT FK_PROFESSOR_TO_RECEIVER
		FOREIGN KEY (
			RECEIVER_ID
		)
		REFERENCES PROFESSOR (
			PROFESSOR_ID
		);

ALTER TABLE REFUND
	ADD
		CONSTRAINT FK_PAY_TO_REFUND
		FOREIGN KEY (
			PAY_NO
		)
		REFERENCES PAY (
			PAY_NO
		);

ALTER TABLE STUDENT
	ADD
		CONSTRAINT FK_MEMBER_TO_STUDENT
		FOREIGN KEY (
			STUDENT_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)
		ON DELETE CASCADE;

ALTER TABLE STUDENT_CERTIFICATE
	ADD
		CONSTRAINT STUDENT_CERTIFICATE_FK1
		FOREIGN KEY (
			STUDENT_ID
		)
		REFERENCES STUDENT (
			STUDENT_ID
		)
		ON DELETE CASCADE;

ALTER TABLE STUDENT_RECRUIT
	ADD
		CONSTRAINT STUDENT_RECRUIT_FK1
		FOREIGN KEY (
			MANAGER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);